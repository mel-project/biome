name: TestAndBuildGo17

on:
  pull_request:
#    paths:
#      - 'go17/**'
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always
#  CHANGED: $(git diff --quiet HEAD master -- go17 || echo true)

jobs:
  verify:
    runs-on: ubuntu-latest

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v2

      - name: Set Enviromnent Variable
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- go17 || echo true)" >> $GITHUB_ENV

      - name: Echo
        env:
          CHANGED: $(git diff --quiet HEAD master -- go17 || echo true)
        run: echo $CHANGED

      - name: Check For Changes
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  build:
    needs: verify
    if: contains(needs.verify.outputs.build, 'true')
    runs-on: ubuntu-latest

    steps:
      - name: Thingy
        run: echo ${{ needs.verify.outputs.build }}

#      - uses: actions/checkout@v2
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: ~/.hab/cache
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('go17/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-

#  build:
#    if: ${{ env.CHANGED == 'true' }}
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: ~/.hab/cache
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('go17/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Test
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: bio pkg build go17
#
#
##      - name: Build, Run BATS Tests
##        env:
##          HAB_ORIGIN: "themelio"
##          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
##          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
##        run: ./biome/themelio-node/scripts/ci-test.sh





#jobs:
#  check:
#    name: Check files
#    outputs:
#      run_job: ${{ steps.check_files.outputs.run_job }}
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 2
#
#      - name: check modified files
#        id: check_files
#        run: |
#          echo "=============== list modified files ==============="
#          git diff --name-only HEAD^ HEAD
#
#          echo "========== check paths of modified files =========="
#          git diff --name-only HEAD^ HEAD > files.txt
#          while IFS= read -r file
#          do
#            echo $file
#            if [[ $file != db/* ]]; then
#              echo "This modified file is not under the 'go17' folder."
#              echo "::set-output name=run_job::false"
#              break
#            else
#              echo "::set-output name=run_job::true"
#            fi
#          done < files.txt
#
#  job_for_db:
#    name: Job for 'go17' folder
#    needs: check
#    if: needs.check.outputs.run_job == 'true'
#    runs-on: ubuntu-latest
#    steps:
#      - name: run for 'go17' folder
#        run: echo "This job runs only when all the modified files are under the 'go17' folder."