name: BuildAndTest

on:
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  # Verify Section

  verify-rust:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- rust || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-node:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- node || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-bats:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- bats || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-go17:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- go17 || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-go:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- go || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-grafana:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- grafana || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-loki:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- loki || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-prometheus:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- prometheus || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-promtail:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- promtail || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-caddy-grafana:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- caddy-grafana || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-caddy-loki:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- caddy-loki || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"

  verify-caddy-prometheus:
    runs-on: self-hosted

    outputs:
      build: ${{ steps.changed.outputs.build }}

    steps:
      - uses: actions/checkout@v3

      - name: Fetch
        run: git fetch

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "CHANGED=$(git diff --quiet HEAD origin/master -- caddy-prometheus || echo true)" >> $GITHUB_ENV

      - name: Output Complete
        id: changed
        if: ${{ env.CHANGED == 'true' }}
        run: echo "::set-output name=build::true"



  # BATS
  build-bats:
    needs:
      - verify-bats
    if: contains(needs.verify-bats.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build And Check
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #          DO_CHECK: "true"
        run: bio pkg build bats

  # Rust

  build-rust:
    needs:
      - verify-rust
    if: contains(needs.verify-rust.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build, Run BATS Tests
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./rust/scripts/ci-test.sh

  # Node
  build-node:
    needs: verify-node
    if: contains(needs.verify-node.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    outputs:
      complete: ${{ steps.build.outputs.complete }}

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build Node
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bio pkg build node

      - name: Copy Hart File
        run: cp $(ls -1t results/themelio-node-*.hart | head -1) results/node-dev.hart

      - name: Create Hart Export
        uses: actions/upload-artifact@v2
        with:
          name: node-dev
          path: results/node-dev.hart

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "COMPLETE=true" >> $GITHUB_ENV

      - name: Echo COMPLETE Environment Variable
        run: echo ${{ env.COMPLETE }}

      - name: Output Complete
        id: build
        if: ${{ env.COMPLETE == 'true' }}
        run: echo "::set-output name=complete::true"


  # Caddy Plans

  build-caddy-prometheus:
    needs:
      - verify-caddy-prometheus
    if: contains(needs.verify-caddy-prometheus.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build, Run BATS Tests
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bio pkg build caddy-prometheus

  build-caddy-loki:
    needs:
      - verify-caddy-loki
    if: contains(needs.verify-caddy-loki.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build, Run BATS Tests
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bio pkg build caddy-loki

  build-caddy-grafana:
    needs:
      - verify-caddy-grafana
    if: contains(needs.verify-caddy-grafana.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build, Run BATS Tests
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bio pkg build caddy-grafana



  # Build Go17 And Go Section

  build-go17:
    needs: verify-go17
    if: contains(needs.verify-go17.outputs.build, 'true')
    outputs:
      complete: ${{ steps.build.outputs.complete }}

    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build Go17
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bio pkg build go17

      - name: Copy Hart File
        run: cp $(ls -1t results/themelio-go17-*.hart | head -1) results/go17-dev.hart

      - name: Create Hart Export
        uses: actions/upload-artifact@v2
        with:
          name: go17-dev
          path: results/go17-dev.hart

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "COMPLETE=true" >> $GITHUB_ENV

      - name: Echo COMPLETE Environment Variable
        run: echo ${{ env.COMPLETE }}

      - name: Output Complete
        id: build
        if: ${{ env.COMPLETE == 'true' }}
        run: echo "::set-output name=complete::true"

  build-go:
    needs:
      - verify-go17
      - verify-go
    if: contains(needs.verify-go.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true')

    outputs:
      complete: ${{ steps.build.outputs.complete }}

    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build Go
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bio pkg build go

      - name: Copy Hart File
        run: cp $(ls -1t results/themelio-go-*.hart | head -1) results/go-dev.hart

      - name: Create Hart Export
        uses: actions/upload-artifact@v2
        with:
          name: go-dev
          path: results/go-dev.hart

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "COMPLETE=true" >> $GITHUB_ENV

      - name: Echo COMPLETE Environment Variable
        run: echo ${{ env.COMPLETE }}

      - name: Output Complete
        id: build
        if: ${{ env.COMPLETE == 'true' }}
        run: echo "::set-output name=complete::true"

  build-go-if-go17-changed:
    needs:
      - verify-go17
      - verify-go
      - build-go17
    if: contains(needs.verify-go.outputs.build, 'true') && contains(needs.verify-go17.outputs.build, 'true') && contains(needs.build-go17.outputs.complete, 'true')

    outputs:
      complete: ${{ steps.build.outputs.complete }}

    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - name: Build Go
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: bio pkg build go

      - name: Copy Hart File
        run: cp $(ls -1t results/themelio-go-*.hart | head -1) results/go-go17-changed-dev.hart

      - name: Create Hart Export
        uses: actions/upload-artifact@v2
        with:
          name: go-go17-changed-dev
          path: results/go-go17-changed-dev.hart

      - name: Set Enviromnent Variable
        shell: bash
        run: echo "COMPLETE=true" >> $GITHUB_ENV

      - name: Echo COMPLETE Environment Variable
        run: echo ${{ env.COMPLETE }}

      - name: Output Complete
        id: build
        if: ${{ env.COMPLETE == 'true' }}
        run: echo "::set-output name=complete::true"



  # Go17 And Go Change Plan Builds

  build-grafana-if-go17-and-go-changed:
    needs:
      - build-go17
      - build-go-if-go17-changed
      - verify-grafana
    if: contains(needs.build-go17.outputs.complete, 'true') && contains(needs.build-go-if-go17-changed.outputs.complete, 'true') && contains(needs.verify-grafana.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - uses: actions/download-artifact@v3
        with:
          name: go17-dev

      - uses: actions/download-artifact@v3
        with:
          name: go-go17-changed-dev

      - name: Install Go17
        run: sudo bio pkg install go17-dev.hart

      - name: Install Go
        run: sudo bio pkg install go-go17-changed-dev.hart

#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname

      - name: Build, Run BATS Tests
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./grafana/scripts/ci-test.sh

  build-loki-if-go17-and-go-changed:
    needs:
      - build-go17
      - build-go-if-go17-changed
      - verify-loki
    if: contains(needs.build-go17.outputs.complete, 'true') && contains(needs.build-go-if-go17-changed.outputs.complete, 'true') && contains(needs.verify-loki.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - uses: actions/download-artifact@v3
        with:
          name: go17-dev

      - uses: actions/download-artifact@v3
        with:
          name: go-go17-changed-dev

      - name: Install Go17
        run: sudo bio pkg install go17-dev.hart

      - name: Install Go
        run: sudo bio pkg install go-go17-changed-dev.hart

#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname

      - name: Build, Run BATS Tests
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./loki/scripts/ci-test.sh

  build-prometheus-if-go17-and-go-changed:
    needs:
      - build-go17
      - build-go-if-go17-changed
      - verify-prometheus
    if: contains(needs.build-go17.outputs.complete, 'true') && contains(needs.build-go-if-go17-changed.outputs.complete, 'true') && contains(needs.verify-prometheus.outputs.build, 'true')
    runs-on: self-hosted

    container:
      image: ghcr.io/themeliolabs/biome:latest
      options: --privileged
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /hab/cache/artifacts:/hab/cache/artifacts
        - /hab/pkgs:/hab/pkgs

    steps:
      - uses: actions/checkout@v3

      - name: Import Biome Public Key
        env:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import

      - name: Import Biome Signing Key
        env:
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
        run: echo "$BIOME_SIGNING_KEY" | bio origin key import

      - uses: actions/download-artifact@v3
        with:
          name: go17-dev

      - uses: actions/download-artifact@v3
        with:
          name: go-go17-changed-dev

      - uses: themeliolabs/actions-biome@v1
        with:
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}

      - name: Install Go17
        run: sudo bio pkg install go17-dev.hart

      - name: Install Go
        run: sudo bio pkg install go-go17-changed-dev.hart

#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname

      - name: Build, Run BATS Tests
        env:
          HAB_ORIGIN: "themelio"
          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./prometheus/scripts/ci-test.sh


#  build-prometheus-if-go17-and-go-and-node-changed:
#    needs:
#      - build-go17
#      - build-go-if-go17-changed
#      - build-node
#      - verify-prometheus
#    if: contains(needs.build-go17.outputs.complete, 'true') && contains(needs.build-go-if-go17-changed.outputs.complete, 'true') && contains(needs.build-node.outputs.complete, 'true') && contains(needs.verify-prometheus.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go17-dev
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go-go17-changed-dev
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: node-dev
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Install Go17
#        run: sudo bio pkg install go17-dev.hart
#
#      - name: Install Go
#        run: sudo bio pkg install go-go17-changed-dev.hart
#
#      - name: Install Node
#        run: sudo bio pkg install node-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('prometheus/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./prometheus/scripts/ci-test.sh
#
#  build-promtail-if-go17-and-go-changed:
#    needs:
#      - build-go17
#      - build-go-if-go17-changed
#      - verify-promtail
#    if: contains(needs.build-go17.outputs.complete, 'true') && contains(needs.build-go-if-go17-changed.outputs.complete, 'true') && contains(needs.verify-promtail.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go17-dev
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go-go17-changed-dev
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Install Go17
#        run: sudo bio pkg install go17-dev.hart
#
#      - name: Install Go
#        run: sudo bio pkg install go-go17-changed-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('promtail/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./promtail/scripts/ci-test.sh
#
#
#  # Go Change Builds
#
#  build-grafana-if-go-changed:
#    needs:
#      - verify-go17
#      - verify-grafana
#      - build-go
#    if: contains(needs.verify-go.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true') && contains(needs.verify-grafana.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go-dev
#
#      - name: Install Go
#        run: sudo bio pkg install go-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('grafana/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./grafana/scripts/ci-test.sh
#
#  build-loki-if-go-changed:
#    needs:
#      - verify-go17
#      - verify-loki
#      - build-go
#    if: contains(needs.verify-go.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true') && contains(needs.verify-loki.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go-dev
#
#      - name: Install Go
#        run: sudo bio pkg install go-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('loki/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./loki/scripts/ci-test.sh
#
#  build-prometheus-if-go-changed:
#    needs:
#      - verify-prometheus
#      - build-go
#    if: contains(needs.build-go.outputs.complete, 'true') && contains(needs.verify-prometheus.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go-dev
#
#      - name: Install Go
#        run: sudo bio pkg install go-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('prometheus/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./prometheus/scripts/ci-test.sh
#
#  build-prometheus-if-node-changed:
#    needs:
#      - verify-prometheus
#      - build-node
#    if: contains(needs.build-node.outputs.complete, 'true') && contains(needs.verify-prometheus.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: node-dev
#
#      - name: Install Node
#        run: sudo bio pkg install node-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('prometheus/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./prometheus/scripts/ci-test.sh
#
#  build-prometheus-if-go-and-node-changed:
#    needs:
#      - build-go
#      - build-node
#      - verify-prometheus
#    if: contains(needs.build-go.outputs.complete, 'true') && contains(needs.build-node.outputs.complete, 'true') && contains(needs.verify-prometheus.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go-dev
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: node-dev
#
#      - name: Install Go
#        run: sudo bio pkg install go-dev.hart
#
#      - name: Install Go
#        run: sudo bio pkg install node-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('prometheus/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./prometheus/scripts/ci-test.sh
#
#  build-promtail-if-go-changed:
#    needs:
#      - verify-go17
#      - verify-promtail
#      - build-go
#    if: contains(needs.verify-go.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true') && contains(needs.verify-promtail.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - uses: actions/download-artifact@v3
#        with:
#          name: go-dev
#
#      - name: Install Go
#        run: sudo bio pkg install go-dev.hart
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('promtail/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./promtail/scripts/ci-test.sh
#
#  # Plan-Only Change Builds
#
#  build-grafana:
#    needs:
#      - verify-go17
#      - verify-go
#      - verify-grafana
#    if: contains(needs.verify-grafana.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true') && !contains(needs.verify-go.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('grafana/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./grafana/scripts/ci-test.sh
#
#  build-loki:
#    needs:
#      - verify-go17
#      - verify-go
#      - verify-loki
#    if: contains(needs.verify-loki.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true') && !contains(needs.verify-go.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('loki/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./loki/scripts/ci-test.sh
#
#  build-prometheus:
#    needs:
#      - verify-go17
#      - verify-go
#      - verify-node
#      - verify-prometheus
#    if: contains(needs.verify-prometheus.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true') && !contains(needs.verify-go.outputs.build, 'true') && !contains(needs.verify-node.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('prometheus/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./prometheus/scripts/ci-test.sh
#
#  build-promtail:
#    needs:
#      - verify-go17
#      - verify-go
#      - verify-promtail
#    if: contains(needs.verify-promtail.outputs.build, 'true') && !contains(needs.verify-go17.outputs.build, 'true') && !contains(needs.verify-go.outputs.build, 'true')
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: themeliolabs/actions-biome@v1
#        with:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#
#      - name: Fix Directory Permissions
#        run: sudo chown -R $(whoami):$(id -ng) /hab
#
#      - name: Remove net-tools
#        run: sudo apt -y remove net-tools
#
#      - name: Remove nisdomainname
#        run: sudo rm /usr/bin/nisdomainname
#
#      - name: Remove hostname
#        run: sudo rm /usr/bin/hostname
#
#      - name: Cache Biome
#        uses: actions/cache@v2
#        env:
#          CACHE_NAME: cache-biome
#        with:
#          path: |
#            ~/.hab/cache/artifacts
#            /hab/cache/artifacts
#            /hab/pkgs
#          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('promtail/plan.sh') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.CACHE_NAME }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: ./promtail/scripts/ci-test.sh